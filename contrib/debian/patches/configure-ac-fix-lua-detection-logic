Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 opendkim (3.0.0~beta1-1) UNRELEASED; urgency=medium
 .
   * New upstream release (3.0.0-beta1 from GitHub/lquidfire).
Author: builder <edmund@proteamail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2025-09-22

--- opendkim-3.0.0~beta1.orig/configure.ac
+++ opendkim-3.0.0~beta1/configure.ac
@@ -1513,124 +1513,95 @@ LIBLUA_LIBDIRS=""
 LIBLUA_LIBS=""
 lua_found="no"
 
-if test \(  x"$luapath" = x"auto" -o x"$luapath" = x"yes" \) -a x"$PKG_CONFIG" != x""
+# Check for lua.pc - This is the norm across Operating Systems now.
+if test \( x"$luapath" = x"auto" -o x"$luapath" = x"yes" \) -a x"$PKG_CONFIG" != x""
 then
-  PKG_CHECK_MODULES([LIBLUA], [lua5.1], [
-      LIBLUA_INCDIRS="$LIBLUA_CFLAGS"
-      lua_found="yes"
-    ],
-    [
-      AC_MSG_WARN([pkg-config for lua5.1 not found, trying lua...])
-      PKG_CHECK_MODULES([LIBLUA], [lua], [
-          LIBLUA_INCDIRS="$LIBLUA_CFLAGS"
-          lua_found="yes"
-        ],
-	[AC_MSG_WARN([pkg-config for lua not found, trying manual search...])]
-      )
-    ]
-  )
+  lua_found="no"
+  for lua_version in lua lua5.4 lua5.3 lua5.2 lua5.1; do
+    if test x"$lua_found" = x"no"; then
+      PKG_CHECK_MODULES([LIBLUA], [$lua_version], [
+        LIBLUA_INCDIRS="$LIBLUA_CFLAGS"
+        lua_found="yes"
+        break
+      ], [:])
+    fi
+  done
+  if test x"$lua_found" = x"no"; then
+    AC_MSG_WARN([pkg-config for lua not found, trying manual search...])
+  fi
 fi
 
+# Manual search fallback for systems without pkg-config
 if test \( x"$luapath" = x"yes" -o x"$luapath" = x"auto" \) -a x"$lua_found" = x"no"
 then
-	AC_MSG_CHECKING([for Lua])
-	luadirs="/usr /usr/local"
-	for d in $luadirs
-	do
-		if test -f $d/include/lua51/lua.h
-		then
-			AC_MSG_RESULT($d)
-			LIBLUA_INCDIRS="-I$d/include/lua51"
-			LIBLUA_LIBDIRS="-L$d/lib/lua51"
-			LIBLUA_LIBS="-llua -lm"
-			lua_found="yes"
-			break
-		elif test -f $d/include/lua52/lua.h
-		then
-			AC_MSG_RESULT($d)
-			LIBLUA_INCDIRS="-I$d/include/lua52"
-			LIBLUA_LIBDIRS="-L$d/lib/lua52"
-			LIBLUA_LIBS="-llua -lm"
-			lua_found="yes"
-			break
-		elif test -f $d/include/lua5.1/lua.h
-		then
-			AC_MSG_RESULT($d)
-			LIBLUA_INCDIRS="-I$d/include/lua5.1"
-			LIBLUA_LIBDIRS="-L$d/lib"
-			LIBLUA_LIBS="-llua5.1 -lm"
-			lua_found="yes"
-			break
-		elif test -f $d/include/lua5.2/lua.h
-		then
-			AC_MSG_RESULT($d)
-			LIBLUA_INCDIRS="-I$d/include/lua5.2"
-			LIBLUA_LIBDIRS="-L$d/lib"
-			LIBLUA_LIBS="-llua5.2 -lm"
-			lua_found="yes"
-			break
-		elif test -f $d/include/lua.h
-		then
-			AC_MSG_RESULT($d)
-			LIBLUA_INCDIRS="-I$d/include"
-			LIBLUA_LIBDIRS="-L$d/lib"
-			LIBLUA_LIBS="-llua -lm"
-			lua_found="yes"
-			break
-		fi
-	done
-	if test x"$LIBLUA_LIBS" = x""
-	then
-		LIBLUA_INCDIRS=""
-		LIBLUA_LIBDIRS=""
-		LIBLUA_LIBS=""
-		AC_MSG_ERROR(not found)
-	else
-		lua_found="yes"
-	fi
+    AC_MSG_CHECKING([for Lua headers manually])
+    lua_found="no"
+    for d in /usr /usr/local /opt/local; do
+        if test x"$lua_found" = x"no"; then
+            # Check standard location first
+            if test -f $d/include/lua.h; then
+                AC_MSG_RESULT([$d (standard)])
+                LIBLUA_INCDIRS="-I$d/include"
+                LIBLUA_LIBDIRS="-L$d/lib"
+                LIBLUA_LIBS="-llua -lm"
+                lua_found="yes"
+                break
+            fi
+            # Check versioned directories
+            for ver in 5.4 5.3 5.2 5.1; do
+                if test x"$lua_found" = x"no"; then
+                    if test -f $d/include/lua$ver/lua.h; then
+                        AC_MSG_RESULT([$d (lua$ver)])
+                        LIBLUA_INCDIRS="-I$d/include/lua$ver"
+                        LIBLUA_LIBDIRS="-L$d/lib"
+                        LIBLUA_LIBS="-llua$ver -lm"
+                        lua_found="yes"
+                        break
+                    fi
+                fi
+            done
+        fi
+    done
+    if test x"$lua_found" = x"no"; then
+        AC_MSG_ERROR([Lua headers not found. Install lua-dev/lua-devel or use --with-lua=PATH])
+    fi
 fi
 
+# Handle explicit path specification
 if test x"$luapath" != x"yes" -a x"$luapath" != x"auto" -a x"$luapath" != x"no"
 then
-	AC_MSG_CHECKING([for Lua])
-	if test -f $luapath/include/lua51/lua.h
-	then
-		AC_MSG_RESULT($luapath)
-		LIBLUA_INCDIRS="-I$luapath/include/lua51"
-		LIBLUA_LIBDIRS="-L$luapath/lib/lua51"
-		LIBLUA_LIBS="-llua -lm"
-		lua_found="yes"
-	elif test -f $luapath/include/lua52/lua.h
-	then
-		AC_MSG_RESULT($luapath)
-		LIBLUA_INCDIRS="-I$luapath/include/lua52"
-		LIBLUA_LIBDIRS="-L$luapath/lib/lua52"
-		LIBLUA_LIBS="-llua -lm"
-		lua_found="yes"
-	elif test -f $luapath/include/lua5.1/lua.h
-	then
-		AC_MSG_RESULT($luapath)
-		LIBLUA_INCDIRS="-I$luapath/include/lua5.1"
-		LIBLUA_LIBDIRS="-L$luapath/lib"
-		LIBLUA_LIBS="-llua5.1 -lm"
-		lua_found="yes"
-	elif test -f $luapath/include/lua5.2/lua.h
-	then
-		AC_MSG_RESULT($luapath)
-		LIBLUA_INCDIRS="-I$luapath/include/lua5.2"
-		LIBLUA_LIBDIRS="-L$luapath/lib"
-		LIBLUA_LIBS="-llua5.2 -lm"
-		lua_found="yes"
-	elif test -f $luapath/include/lua.h
-	then
-		AC_MSG_RESULT($luapath)
-		LIBLUA_INCDIRS="-I$luapath/include"
-		LIBLUA_LIBDIRS="-L$luapath/lib"
-		LIBLUA_LIBS="-llua -lm"
-		lua_found="yes"
-	else
-		AC_MSG_ERROR(not found at $luapath)
-	fi
+    AC_MSG_CHECKING([for Lua at $luapath])
+    lua_found="no"
+    # Try versioned subdirectories first, then standard location
+    for ver in 5.4 5.3 5.2 5.1 ""; do
+        if test x"$lua_found" = x"no"; then
+            if test -z "$ver"; then
+                # Standard location
+                header_path="$luapath/include/lua.h"
+                inc_dir="-I$luapath/include"
+                lib_name="-llua"
+                ver_desc="standard"
+            else
+                # Versioned subdirectory
+                header_path="$luapath/include/lua$ver/lua.h"
+                inc_dir="-I$luapath/include/lua$ver"
+                lib_name="-llua$ver"
+                ver_desc="lua$ver"
+            fi
+            
+            if test -f "$header_path"; then
+                AC_MSG_RESULT([$luapath ($ver_desc)])
+                LIBLUA_INCDIRS="$inc_dir"
+                LIBLUA_LIBDIRS="-L$luapath/lib"
+                LIBLUA_LIBS="$lib_name -lm"
+                lua_found="yes"
+                break
+            fi
+        fi
+    done
+    if test x"$lua_found" = x"no"; then
+        AC_MSG_ERROR([Lua not found at $luapath])
+    fi
 fi
 
 if test x"$lua_found" = x"yes"
